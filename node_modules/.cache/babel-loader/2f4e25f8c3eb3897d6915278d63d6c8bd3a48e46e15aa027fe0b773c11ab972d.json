{"ast":null,"code":"import _objectSpread from \"D:/Programming/new/table/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"D:\\\\Programming\\\\new\\\\table\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/App.js\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./style.css\";\nimport CustomSelect from \"./CustomSelect\";\nimport commentIcon from \"./icons/comment.png\";\nimport printerIcon from \"./icons/printer.png\";\nimport addIcon from \"./icons/add.png\";\nimport searchIcon from \"./icons/search.png\";\nimport { AuthContext } from \"./AuthContext\";\nimport Login from \"./Login\";\nimport { firestore, storage } from \"./firebase\";\nimport { collection, onSnapshot, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { signOut, updateProfile } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\n// Функция для затемнения цвета на заданный процент\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction darkenHex(hex, percent) {\n  hex = hex.replace(/^#/, \"\");\n  if (hex.length === 3) {\n    hex = hex.split(\"\").map(c => c + c).join(\"\");\n  }\n  let num = parseInt(hex, 16);\n  let r = num >> 16 & 0xff;\n  let g = num >> 8 & 0xff;\n  let b = num & 0xff;\n  r = Math.floor(r * (100 - percent) / 100);\n  g = Math.floor(g * (100 - percent) / 100);\n  b = Math.floor(b * (100 - percent) / 100);\n  return \"#\" + [r, g, b].map(x => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\n// Подписи для полей\nconst fieldLabels = {\n  orderNo: \"№\",\n  source: \"Джерело\",\n  orderDate: \"Дата від/до\",\n  shippingDate: \"Дата від/до\",\n  item: \"Товар\",\n  description: \"Персоналізація\",\n  size: \"Розмір\",\n  design: \"Дизайн\",\n  message: \"Повідомлення\",\n  recipientInfo: \"Отримувач\",\n  status: \"Статус\",\n  tracking: \"Трекінг\",\n  project: \"Макет\"\n};\n\n// Опции для select-полей\nconst sourceOptions = [\"TABIX\", \"SnugWoodNug\", \"Dreamble\"];\nconst itemOptions = [\"Хотвілс\", \"Кардбокс\", \"Ім'я\", \"Імйя бравл старс\"];\nconst sizeOptions = [\"S\", \"M\", \"L\", \"12inch\", \"15inch\", \"20inch\", \"25inch\", \"30inch\", \"32inch\"];\nconst designOptions = [\"A\", \"B\", \"C\", \"D\", \"E\"];\nconst statusOptions = [\"Чекаю макет\", \"Є макет\", \"Підтверджено\", \"Взято в роботу\", \"Коментар\"];\n\n// Фон строк по статусу\nconst rowBackgroundColors = {\n  \"Чекаю макет\": \"#F5F5F5\",\n  \"Є макет\": \"#F0E6FA\",\n  Підтверджено: \"#E0F7FF\",\n  \"Взято в роботу\": \"#FFDAB3\",\n  Коментар: \"#FFE4E1\"\n};\n\n// Начальное состояние нового заказа\nconst initialOrder = {\n  orderNo: \"\",\n  source: \"TABIX\",\n  orderDate: new Date(),\n  shippingDate: new Date(),\n  customer: \"\",\n  item: \"\",\n  description: \"\",\n  size: \"\",\n  design: \"\",\n  message: [],\n  // Массив объектов { sender, text, read, [avatar] }\n  recipientInfo: \"\",\n  status: \"Чекаю макет\",\n  tracking: \"\",\n  project: \"\"\n};\n\n// Определяем столбцы таблицы; для колонки \"message\" задаём класс \"col-message\"\nconst tableColumns = [{\n  key: \"orderNo\",\n  label: fieldLabels.orderNo,\n  editable: false,\n  className: \"col-order no-print\"\n}, {\n  key: \"source\",\n  label: fieldLabels.source,\n  editable: true,\n  type: \"select\",\n  options: sourceOptions\n}, {\n  key: \"dates\",\n  label: \"Дата від/до\",\n  editable: true,\n  type: \"date\"\n}, {\n  key: \"item\",\n  label: fieldLabels.item,\n  editable: true,\n  type: \"select\",\n  options: itemOptions,\n  className: \"col-item\"\n}, {\n  key: \"description\",\n  label: fieldLabels.description,\n  editable: true\n}, {\n  key: \"size\",\n  label: fieldLabels.size,\n  editable: true,\n  type: \"select\",\n  options: sizeOptions,\n  className: \"col-size\"\n}, {\n  key: \"design\",\n  label: fieldLabels.design,\n  editable: true,\n  type: \"select\",\n  options: designOptions,\n  className: \"col-design\"\n}, {\n  key: \"message\",\n  label: fieldLabels.message,\n  editable: true,\n  type: \"message\",\n  className: \"col-message\"\n}, {\n  key: \"recipientInfo\",\n  label: fieldLabels.recipientInfo,\n  editable: true\n}, {\n  key: \"status\",\n  label: fieldLabels.status,\n  editable: true,\n  type: \"select\",\n  options: statusOptions,\n  className: \"no-print\"\n}, {\n  key: \"tracking\",\n  label: fieldLabels.tracking,\n  editable: true\n}, {\n  key: \"project\",\n  label: fieldLabels.project,\n  editable: true\n}];\nconst statusButtons = [\"Все\", ...statusOptions];\n\n// Константа для placeholder аватара\nconst defaultAvatarUrl = \"https://via.placeholder.com/40\";\nfunction DateInput(_ref) {\n  let {\n    value,\n    onChange,\n    customStyle = {}\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DatePicker, {\n    selected: value,\n    onChange: onChange,\n    dateFormat: \"MM-dd\",\n    className: \"editing-field no-bg\",\n    wrapperClassName: \"date-picker-wrapper\",\n    onClick: e => e.stopPropagation(),\n    customInput: /*#__PURE__*/_jsxDEV(\"input\", {\n      style: customStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_c = DateInput;\nfunction AlwaysEditableCell(_ref2) {\n  let {\n    value,\n    onChange,\n    type = \"text\",\n    options,\n    customStyle = {}\n  } = _ref2;\n  if (type === \"date\") {\n    return /*#__PURE__*/_jsxDEV(DateInput, {\n      value: value,\n      onChange: onChange,\n      customStyle: customStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  if (type === \"select\") {\n    return /*#__PURE__*/_jsxDEV(CustomSelect, {\n      options: options,\n      value: value,\n      onChange: onChange,\n      placeholder: \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    value: value,\n    onChange: e => onChange(e.target.value),\n    onClick: e => e.stopPropagation(),\n    className: \"editing-field\",\n    style: customStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AlwaysEditableCell;\nfunction autoResize(e) {\n  const textarea = e.target;\n  textarea.style.height = \"auto\";\n  textarea.style.height = textarea.scrollHeight + \"px\";\n}\n\n// Компонент для загрузки аватара, расположенный в правом блоке после кнопки \"Вийти\"\nfunction AvatarUploader() {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [hover, setHover] = useState(false);\n  const handleAvatarChange = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const storageRef = ref(storage, \"avatars/\".concat(user.uid, \"_\").concat(file.name));\n      await uploadBytes(storageRef, file);\n      const downloadURL = await getDownloadURL(storageRef);\n      await updateProfile(user, {\n        photoURL: downloadURL\n      });\n      console.log(\"Аватар обновлен:\", downloadURL);\n    } catch (error) {\n      console.error(\"Ошибка загрузки аватара:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar-container\",\n    onMouseEnter: () => setHover(true),\n    onMouseLeave: () => setHover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.photoURL || defaultAvatarUrl,\n      alt: \"avatar\",\n      className: \"avatar-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), hover && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"avatar-upload-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleAvatarChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s(AvatarUploader, \"XfQ45hGKGF318Vy7RV1Yu9aAOV0=\");\n_c3 = AvatarUploader;\nfunction AppContent() {\n  _s2();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [data, setData] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [enlargedImage, setEnlargedImage] = useState(null);\n  const [filters, setFilters] = useState({\n    searchText: \"\",\n    source: \"\",\n    recipientInfo: \"\",\n    status: \"\",\n    tracking: \"\"\n  });\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [messageModalData, setMessageModalData] = useState(null);\n  const messageEndRef = useRef(null);\n  useEffect(() => {\n    const ordersCollection = collection(firestore, \"orders\");\n    const unsubscribe = onSnapshot(ordersCollection, snapshot => {\n      const orders = snapshot.docs.map(doc => {\n        var _data$orderDate, _data$shippingDate;\n        const data = doc.data();\n        return _objectSpread(_objectSpread({\n          id: doc.id\n        }, data), {}, {\n          orderDate: (_data$orderDate = data.orderDate) !== null && _data$orderDate !== void 0 && _data$orderDate.toDate ? data.orderDate.toDate() : new Date(data.orderDate),\n          shippingDate: (_data$shippingDate = data.shippingDate) !== null && _data$shippingDate !== void 0 && _data$shippingDate.toDate ? data.shippingDate.toDate() : new Date(data.shippingDate)\n        });\n      });\n      orders.sort((a, b) => b.orderDate - a.orderDate);\n      setData(orders);\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    if (messageModalData) {\n      var _messageEndRef$curren;\n      (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messageModalData === null || messageModalData === void 0 ? void 0 : messageModalData.messages]);\n  const filteredData = data.filter(order => {\n    const searchText = filters.searchText.toLowerCase();\n    const matchSearch = !searchText || order.source.toLowerCase().includes(searchText) || order.recipientInfo && order.recipientInfo.toLowerCase().includes(searchText) || order.tracking && order.tracking.toLowerCase().includes(searchText) || order.description && order.description.toLowerCase().includes(searchText);\n    const matchSource = !filters.source || order.source === filters.source;\n    const matchRecipient = !filters.recipientInfo || order.recipientInfo && order.recipientInfo.toLowerCase().includes(filters.recipientInfo.toLowerCase());\n    const matchStatus = !filters.status || order.status === filters.status;\n    const matchTracking = !filters.tracking || order.tracking && order.tracking.toLowerCase().includes(filters.tracking.toLowerCase());\n    const matchStatusFilter = !statusFilter || order.status === statusFilter;\n    return matchSearch && matchSource && matchRecipient && matchStatus && matchTracking && matchStatusFilter;\n  });\n  const updateCell = async (rowIndex, field, newValue) => {\n    const order = data[rowIndex];\n    if (order && order.id) {\n      const orderRef = doc(firestore, \"orders\", order.id);\n      await updateDoc(orderRef, {\n        [field]: newValue\n      });\n    }\n  };\n  const handleAddRow = async () => {\n    const newOrder = _objectSpread(_objectSpread({}, initialOrder), {}, {\n      isNew: true\n    });\n    const ordersCollection = collection(firestore, \"orders\");\n    await addDoc(ordersCollection, newOrder);\n  };\n  const handleDeleteSelected = async () => {\n    for (let rowIndex of selectedRows) {\n      const order = data[rowIndex];\n      if (order && order.id) {\n        const orderRef = doc(firestore, \"orders\", order.id);\n        try {\n          await deleteDoc(orderRef);\n        } catch (error) {\n          console.error(\"Ошибка при удалении заказа:\", error);\n        }\n      }\n    }\n    setSelectedRows([]);\n  };\n  const toggleRowSelection = rowIndex => {\n    if (selectedRows.includes(rowIndex)) {\n      setSelectedRows(selectedRows.filter(i => i !== rowIndex));\n    } else {\n      setSelectedRows([...selectedRows, rowIndex]);\n    }\n  };\n  const handleFileChange = async (rowIndex, e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      const fileRef = ref(storage, \"orders/\".concat(Date.now(), \"_\").concat(selectedFile.name));\n      try {\n        await uploadBytes(fileRef, selectedFile);\n        const downloadURL = await getDownloadURL(fileRef);\n        updateCell(rowIndex, \"project\", downloadURL);\n      } catch (error) {\n        console.error(\"Ошибка загрузки файла:\", error);\n      }\n    }\n  };\n  const handleImageClick = (imageUrl, e) => {\n    e.stopPropagation();\n    setEnlargedImage(imageUrl);\n  };\n  const handleCloseEnlargedImage = () => {\n    setEnlargedImage(null);\n  };\n  const resetFilters = () => {\n    setFilters({\n      searchText: \"\",\n      source: \"\",\n      recipientInfo: \"\",\n      status: \"\",\n      tracking: \"\"\n    });\n    setStatusFilter(\"\");\n  };\n  const openMessageModal = (rowIndex, currentMessages) => {\n    const updatedMessages = currentMessages && currentMessages.length > 0 ? currentMessages.map(msg => _objectSpread(_objectSpread({}, msg), {}, {\n      read: true\n    })) : [];\n    updateCell(rowIndex, \"message\", updatedMessages);\n    setMessageModalData({\n      rowIndex,\n      messages: updatedMessages,\n      newMessage: \"\"\n    });\n  };\n  function sendChatMessage() {\n    if (!messageModalData.newMessage || messageModalData.newMessage.trim() === \"\") return;\n    const newMsg = {\n      sender: user.email,\n      text: messageModalData.newMessage,\n      read: false,\n      avatar: user.photoURL || defaultAvatarUrl\n    };\n    const updatedMessages = [...messageModalData.messages, newMsg];\n    updateCell(messageModalData.rowIndex, \"message\", updatedMessages);\n    setMessageModalData(_objectSpread(_objectSpread({}, messageModalData), {}, {\n      messages: updatedMessages,\n      newMessage: \"\"\n    }));\n  }\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(\"Ошибка при выходе:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0422\\u0430\\u0431\\u043B\\u0438\\u0446\\u044F \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-order-button\",\n          onClick: handleAddRow,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: addIcon,\n            alt: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\",\n            className: \"add-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"print-button\",\n          onClick: () => window.print(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: printerIcon,\n            alt: \"\\u0414\\u0440\\u0443\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), selectedRows.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteSelected,\n          children: [\"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0432\\u0438\\u0434\\u0456\\u043B\\u0435\\u043D\\u0456 (\", selectedRows.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"\\u0412\\u0438\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-avatar\",\n          children: /*#__PURE__*/_jsxDEV(AvatarUploader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-search-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-buttons\",\n        children: statusButtons.map(status => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"status-button \".concat(statusFilter === status ? \"active\" : \"\"),\n          style: {\n            background: status === \"Все\" ? \"#fff\" : rowBackgroundColors[status] || \"#fff\"\n          },\n          onClick: () => {\n            if (status === \"Все\") {\n              setStatusFilter(\"\");\n            } else {\n              setStatusFilter(status);\n            }\n          },\n          children: status\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A...\",\n          value: filters.searchText,\n          onChange: e => setFilters(_objectSpread(_objectSpread({}, filters), {}, {\n            searchText: e.target.value\n          })),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"\\u041F\\u043E\\u0448\\u0443\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col-order no-print\",\n              onClick: () => toggleRowSelection(0),\n              children: \"\\u0412\\u0438\\u0431\\u0456\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), tableColumns.map((col, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: col.className || \"\",\n              style: col.style ? col.style : {},\n              children: col.key === \"dates\" ? \"Дата від/до\" : col.label\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredData.map((order, rowIndex) => {\n            const bgColor = order.status ? rowBackgroundColors[order.status] || \"transparent\" : \"transparent\";\n            const inputBorderColor = darkenHex(bgColor, 10);\n            const inputBgColor = darkenHex(bgColor, 3);\n            const cellBorderColor = darkenHex(bgColor, 15);\n            const isSelected = selectedRows.includes(rowIndex);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"custom-bg \".concat(isSelected ? \"selected\" : \"\"),\n              style: _objectSpread(_objectSpread({}, order.isNew && {\n                animation: \"fadeInUp 0.2s ease-out\"\n              }), {}, {\n                \"--row-bg\": bgColor,\n                \"--input-border\": inputBorderColor,\n                \"--input-bg\": inputBgColor,\n                \"--cell-border\": cellBorderColor,\n                outline: isSelected ? \"1px solid #000\" : \"none\",\n                cursor: \"pointer\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => toggleRowSelection(rowIndex),\n                className: \"no-bg no-print\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: isSelected,\n                  onClick: e => e.stopPropagation(),\n                  onChange: () => toggleRowSelection(rowIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), tableColumns.map(col => {\n                if (col.key === \"orderNo\") {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: filteredData.length - rowIndex\n                  }, col.key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 25\n                  }, this);\n                } else if (col.key === \"dates\") {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(DateInput, {\n                      value: order.orderDate,\n                      onChange: date => updateCell(rowIndex, \"orderDate\", date)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(DateInput, {\n                      value: order.shippingDate,\n                      onChange: date => updateCell(rowIndex, \"shippingDate\", date)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 27\n                    }, this)]\n                  }, col.key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 25\n                  }, this);\n                } else if (col.key === \"message\") {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"message-button\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        openMessageModal(rowIndex, order.message);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: commentIcon,\n                        alt: \"\\u041F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 616,\n                        columnNumber: 29\n                      }, this), order.message && (() => {\n                        const currentUserEmail = user === null || user === void 0 ? void 0 : user.email;\n                        const unreadCount = order.message.filter(msg => msg.sender !== currentUserEmail && !msg.read).length;\n                        const indicatorClass = unreadCount > 0 ? \"red-indicator\" : \"green-indicator\";\n                        return /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: indicatorClass,\n                          children: order.message.length\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 629,\n                          columnNumber: 35\n                        }, this);\n                      })()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 609,\n                      columnNumber: 27\n                    }, this)\n                  }, col.key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 25\n                  }, this);\n                } else if (col.key === \"project\") {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order.project ? isSelected ? /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"file-button\",\n                      children: [\"Change photo\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        onChange: e => handleFileChange(rowIndex, e),\n                        style: {\n                          display: \"none\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 644,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: order.project,\n                      alt: \"\\u041C\\u0430\\u043A\\u0435\\u0442\",\n                      style: {\n                        width: \"80px\",\n                        height: \"80px\",\n                        objectFit: \"cover\",\n                        cursor: \"pointer\"\n                      },\n                      onClick: e => handleImageClick(order.project, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 653,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"file-button\",\n                      children: [\"\\uD83D\\uDDBC\", /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"file\",\n                        onChange: e => handleFileChange(rowIndex, e),\n                        style: {\n                          display: \"none\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 670,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 668,\n                      columnNumber: 29\n                    }, this)\n                  }, col.key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 25\n                  }, this);\n                } else if (col.editable) {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: col.className || \"\",\n                    style: col.style ? col.style : {},\n                    children: /*#__PURE__*/_jsxDEV(AlwaysEditableCell, {\n                      value: order[col.key] || \"\",\n                      onChange: newVal => updateCell(rowIndex, col.key, newVal),\n                      type: col.type === \"date\" ? \"date\" : col.type || \"text\",\n                      options: col.options,\n                      customStyle: col.type === \"date\" ? {} : {\n                        backgroundColor: \"var(--input-bg)\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 27\n                    }, this)\n                  }, col.key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: order[col.key] || \"\"\n                  }, col.key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 30\n                  }, this);\n                }\n              })]\n            }, rowIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this), enlargedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: handleCloseEnlargedImage,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: enlargedImage,\n          alt: \"\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0435\\u043D\\u043D\\u043E\\u0435 \\u0444\\u043E\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 9\n    }, this), messageModalData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setMessageModalData(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-bg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-modal-header\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"modal-title\",\n                  children: \"\\u0427\\u0430\\u0442\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 21\n                }, this), data[messageModalData.rowIndex] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"modal-subtitle\",\n                  children: [\"\\u0422\\u043E\\u0432\\u0430\\u0440: \", data[messageModalData.rowIndex].item, \" / \\u041F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u0456\\u0437\\u0430\\u0446\\u0456\\u044F:\", \" \", data[messageModalData.rowIndex].description, \" (\\u2116\", \" \", filteredData.length - messageModalData.rowIndex, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-modal-body\",\n              children: [messageModalData.messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-messages\",\n                children: \"\\u041D\\u0435\\u043C\\u0430\\u0454 \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 21\n              }, this) :\n              // Рендер сообщений: для всех сообщений выводим аватар только если отправитель – не текущий пользователь\n              messageModalData.messages.map((msg, idx) => {\n                const isCurrent = msg.sender === user.email;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-message-container \".concat(isCurrent ? \"current\" : \"other\"),\n                  style: isCurrent ? {\n                    marginLeft: \"auto\"\n                  } : {},\n                  children: [!isCurrent && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-avatar\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: msg.avatar || defaultAvatarUrl,\n                      alt: \"avatar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-message-bubble\",\n                    children: msg.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 27\n                  }, this)]\n                }, idx, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 25\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messageEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-modal-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"textarea-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0456\\u0442\\u044C \\u043F\\u043E\\u0432\\u0456\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u043D\\u044F...\",\n                  value: messageModalData.newMessage || \"\",\n                  onChange: e => setMessageModalData(_objectSpread(_objectSpread({}, messageModalData), {}, {\n                    newMessage: e.target.value\n                  })),\n                  onInput: autoResize,\n                  style: {\n                    minHeight: \"40px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: sendChatMessage,\n                  className: \"send-button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: () => setMessageModalData(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n}\n_s2(AppContent, \"bB+giDNvSx8yC5c14dAOC2PH61Y=\");\n_c4 = AppContent;\nfunction App() {\n  _s3();\n  const {\n    user\n  } = useContext(AuthContext);\n  return user ? /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 808,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: () => {}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 808,\n    columnNumber: 34\n  }, this);\n}\n_s3(App, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DateInput\");\n$RefreshReg$(_c2, \"AlwaysEditableCell\");\n$RefreshReg$(_c3, \"AvatarUploader\");\n$RefreshReg$(_c4, \"AppContent\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useRef","DatePicker","CustomSelect","commentIcon","printerIcon","addIcon","searchIcon","AuthContext","Login","firestore","storage","collection","onSnapshot","addDoc","updateDoc","deleteDoc","doc","ref","uploadBytes","getDownloadURL","signOut","updateProfile","auth","jsxDEV","_jsxDEV","darkenHex","hex","percent","replace","length","split","map","c","join","num","parseInt","r","g","b","Math","floor","x","toString","padStart","fieldLabels","orderNo","source","orderDate","shippingDate","item","description","size","design","message","recipientInfo","status","tracking","project","sourceOptions","itemOptions","sizeOptions","designOptions","statusOptions","rowBackgroundColors","Підтверджено","Коментар","initialOrder","Date","customer","tableColumns","key","label","editable","className","type","options","statusButtons","defaultAvatarUrl","DateInput","_ref","value","onChange","customStyle","selected","dateFormat","wrapperClassName","onClick","e","stopPropagation","customInput","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","AlwaysEditableCell","_ref2","placeholder","target","_c2","autoResize","textarea","height","scrollHeight","AvatarUploader","_s","user","hover","setHover","handleAvatarChange","file","files","storageRef","concat","uid","name","downloadURL","photoURL","console","log","error","onMouseEnter","onMouseLeave","children","src","alt","accept","_c3","AppContent","_s2","data","setData","selectedRows","setSelectedRows","enlargedImage","setEnlargedImage","filters","setFilters","searchText","statusFilter","setStatusFilter","messageModalData","setMessageModalData","messageEndRef","ordersCollection","unsubscribe","snapshot","orders","docs","_data$orderDate","_data$shippingDate","_objectSpread","id","toDate","sort","a","_messageEndRef$curren","current","scrollIntoView","behavior","messages","filteredData","filter","order","toLowerCase","matchSearch","includes","matchSource","matchRecipient","matchStatus","matchTracking","matchStatusFilter","updateCell","rowIndex","field","newValue","orderRef","handleAddRow","newOrder","isNew","handleDeleteSelected","toggleRowSelection","i","handleFileChange","selectedFile","fileRef","now","handleImageClick","imageUrl","handleCloseEnlargedImage","resetFilters","openMessageModal","currentMessages","updatedMessages","msg","read","newMessage","sendChatMessage","trim","newMsg","sender","email","text","avatar","handleLogout","window","print","background","col","index","bgColor","inputBorderColor","inputBgColor","cellBorderColor","isSelected","animation","outline","cursor","checked","date","currentUserEmail","unreadCount","indicatorClass","display","width","objectFit","newVal","backgroundColor","idx","isCurrent","marginLeft","onInput","minHeight","_c4","App","_s3","onLogin","_c5","$RefreshReg$"],"sources":["D:/Programming/new/table/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./style.css\";\nimport CustomSelect from \"./CustomSelect\";\nimport commentIcon from \"./icons/comment.png\";\nimport printerIcon from \"./icons/printer.png\";\nimport addIcon from \"./icons/add.png\";\nimport searchIcon from \"./icons/search.png\";\nimport { AuthContext } from \"./AuthContext\";\nimport Login from \"./Login\";\nimport { firestore, storage } from \"./firebase\";\nimport {\n  collection,\n  onSnapshot,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { signOut, updateProfile } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\n// Функция для затемнения цвета на заданный процент\nfunction darkenHex(hex, percent) {\n  hex = hex.replace(/^#/, \"\");\n  if (hex.length === 3) {\n    hex = hex\n      .split(\"\")\n      .map((c) => c + c)\n      .join(\"\");\n  }\n  let num = parseInt(hex, 16);\n  let r = (num >> 16) & 0xff;\n  let g = (num >> 8) & 0xff;\n  let b = num & 0xff;\n  r = Math.floor((r * (100 - percent)) / 100);\n  g = Math.floor((g * (100 - percent)) / 100);\n  b = Math.floor((b * (100 - percent)) / 100);\n  return \"#\" + [r, g, b].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n}\n\n// Подписи для полей\nconst fieldLabels = {\n  orderNo: \"№\",\n  source: \"Джерело\",\n  orderDate: \"Дата від/до\",\n  shippingDate: \"Дата від/до\",\n  item: \"Товар\",\n  description: \"Персоналізація\",\n  size: \"Розмір\",\n  design: \"Дизайн\",\n  message: \"Повідомлення\",\n  recipientInfo: \"Отримувач\",\n  status: \"Статус\",\n  tracking: \"Трекінг\",\n  project: \"Макет\",\n};\n\n// Опции для select-полей\nconst sourceOptions = [\"TABIX\", \"SnugWoodNug\", \"Dreamble\"];\nconst itemOptions = [\"Хотвілс\", \"Кардбокс\", \"Ім'я\", \"Імйя бравл старс\"];\nconst sizeOptions = [\n  \"S\",\n  \"M\",\n  \"L\",\n  \"12inch\",\n  \"15inch\",\n  \"20inch\",\n  \"25inch\",\n  \"30inch\",\n  \"32inch\",\n];\nconst designOptions = [\"A\", \"B\", \"C\", \"D\", \"E\"];\nconst statusOptions = [\n  \"Чекаю макет\",\n  \"Є макет\",\n  \"Підтверджено\",\n  \"Взято в роботу\",\n  \"Коментар\",\n];\n\n// Фон строк по статусу\nconst rowBackgroundColors = {\n  \"Чекаю макет\": \"#F5F5F5\",\n  \"Є макет\": \"#F0E6FA\",\n  Підтверджено: \"#E0F7FF\",\n  \"Взято в роботу\": \"#FFDAB3\",\n  Коментар: \"#FFE4E1\",\n};\n\n// Начальное состояние нового заказа\nconst initialOrder = {\n  orderNo: \"\",\n  source: \"TABIX\",\n  orderDate: new Date(),\n  shippingDate: new Date(),\n  customer: \"\",\n  item: \"\",\n  description: \"\",\n  size: \"\",\n  design: \"\",\n  message: [], // Массив объектов { sender, text, read, [avatar] }\n  recipientInfo: \"\",\n  status: \"Чекаю макет\",\n  tracking: \"\",\n  project: \"\",\n};\n\n// Определяем столбцы таблицы; для колонки \"message\" задаём класс \"col-message\"\nconst tableColumns = [\n  {\n    key: \"orderNo\",\n    label: fieldLabels.orderNo,\n    editable: false,\n    className: \"col-order no-print\",\n  },\n  {\n    key: \"source\",\n    label: fieldLabels.source,\n    editable: true,\n    type: \"select\",\n    options: sourceOptions,\n  },\n  { key: \"dates\", label: \"Дата від/до\", editable: true, type: \"date\" },\n  {\n    key: \"item\",\n    label: fieldLabels.item,\n    editable: true,\n    type: \"select\",\n    options: itemOptions,\n    className: \"col-item\",\n  },\n  { key: \"description\", label: fieldLabels.description, editable: true },\n  {\n    key: \"size\",\n    label: fieldLabels.size,\n    editable: true,\n    type: \"select\",\n    options: sizeOptions,\n    className: \"col-size\",\n  },\n  {\n    key: \"design\",\n    label: fieldLabels.design,\n    editable: true,\n    type: \"select\",\n    options: designOptions,\n    className: \"col-design\",\n  },\n  {\n    key: \"message\",\n    label: fieldLabels.message,\n    editable: true,\n    type: \"message\",\n    className: \"col-message\",\n  },\n  { key: \"recipientInfo\", label: fieldLabels.recipientInfo, editable: true },\n  {\n    key: \"status\",\n    label: fieldLabels.status,\n    editable: true,\n    type: \"select\",\n    options: statusOptions,\n    className: \"no-print\",\n  },\n  { key: \"tracking\", label: fieldLabels.tracking, editable: true },\n  { key: \"project\", label: fieldLabels.project, editable: true },\n];\n\nconst statusButtons = [\"Все\", ...statusOptions];\n\n// Константа для placeholder аватара\nconst defaultAvatarUrl = \"https://via.placeholder.com/40\";\n\nfunction DateInput({ value, onChange, customStyle = {} }) {\n  return (\n    <DatePicker\n      selected={value}\n      onChange={onChange}\n      dateFormat=\"MM-dd\"\n      className=\"editing-field no-bg\"\n      wrapperClassName=\"date-picker-wrapper\"\n      onClick={(e) => e.stopPropagation()}\n      customInput={<input style={customStyle} />}\n    />\n  );\n}\n\nfunction AlwaysEditableCell({\n  value,\n  onChange,\n  type = \"text\",\n  options,\n  customStyle = {},\n}) {\n  if (type === \"date\") {\n    return (\n      <DateInput value={value} onChange={onChange} customStyle={customStyle} />\n    );\n  }\n  if (type === \"select\") {\n    return (\n      <CustomSelect\n        options={options}\n        value={value}\n        onChange={onChange}\n        placeholder=\"Оберіть...\"\n      />\n    );\n  }\n  return (\n    <input\n      type={type}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      onClick={(e) => e.stopPropagation()}\n      className=\"editing-field\"\n      style={customStyle}\n    />\n  );\n}\n\nfunction autoResize(e) {\n  const textarea = e.target;\n  textarea.style.height = \"auto\";\n  textarea.style.height = textarea.scrollHeight + \"px\";\n}\n\n// Компонент для загрузки аватара, расположенный в правом блоке после кнопки \"Вийти\"\nfunction AvatarUploader() {\n  const { user } = useContext(AuthContext);\n  const [hover, setHover] = useState(false);\n\n  const handleAvatarChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    try {\n      const storageRef = ref(storage, `avatars/${user.uid}_${file.name}`);\n      await uploadBytes(storageRef, file);\n      const downloadURL = await getDownloadURL(storageRef);\n      await updateProfile(user, { photoURL: downloadURL });\n      console.log(\"Аватар обновлен:\", downloadURL);\n    } catch (error) {\n      console.error(\"Ошибка загрузки аватара:\", error);\n    }\n  };\n\n  return (\n    <div\n      className=\"avatar-container\"\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <img\n        src={user.photoURL || defaultAvatarUrl}\n        alt=\"avatar\"\n        className=\"avatar-image\"\n      />\n      {hover && (\n        <label className=\"avatar-upload-label\">\n          <input type=\"file\" accept=\"image/*\" onChange={handleAvatarChange} />\n          Загрузить\n        </label>\n      )}\n    </div>\n  );\n}\n\nfunction AppContent() {\n  const { user } = useContext(AuthContext);\n  const [data, setData] = useState([]);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [enlargedImage, setEnlargedImage] = useState(null);\n  const [filters, setFilters] = useState({\n    searchText: \"\",\n    source: \"\",\n    recipientInfo: \"\",\n    status: \"\",\n    tracking: \"\",\n  });\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [messageModalData, setMessageModalData] = useState(null);\n  const messageEndRef = useRef(null);\n\n  useEffect(() => {\n    const ordersCollection = collection(firestore, \"orders\");\n    const unsubscribe = onSnapshot(ordersCollection, (snapshot) => {\n      const orders = snapshot.docs.map((doc) => {\n        const data = doc.data();\n        return {\n          id: doc.id,\n          ...data,\n          orderDate: data.orderDate?.toDate\n            ? data.orderDate.toDate()\n            : new Date(data.orderDate),\n          shippingDate: data.shippingDate?.toDate\n            ? data.shippingDate.toDate()\n            : new Date(data.shippingDate),\n        };\n      });\n      orders.sort((a, b) => b.orderDate - a.orderDate);\n      setData(orders);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    if (messageModalData) {\n      messageEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n  }, [messageModalData?.messages]);\n\n  const filteredData = data.filter((order) => {\n    const searchText = filters.searchText.toLowerCase();\n    const matchSearch =\n      !searchText ||\n      order.source.toLowerCase().includes(searchText) ||\n      (order.recipientInfo &&\n        order.recipientInfo.toLowerCase().includes(searchText)) ||\n      (order.tracking && order.tracking.toLowerCase().includes(searchText)) ||\n      (order.description &&\n        order.description.toLowerCase().includes(searchText));\n    const matchSource = !filters.source || order.source === filters.source;\n    const matchRecipient =\n      !filters.recipientInfo ||\n      (order.recipientInfo &&\n        order.recipientInfo\n          .toLowerCase()\n          .includes(filters.recipientInfo.toLowerCase()));\n    const matchStatus = !filters.status || order.status === filters.status;\n    const matchTracking =\n      !filters.tracking ||\n      (order.tracking &&\n        order.tracking.toLowerCase().includes(filters.tracking.toLowerCase()));\n    const matchStatusFilter = !statusFilter || order.status === statusFilter;\n    return (\n      matchSearch &&\n      matchSource &&\n      matchRecipient &&\n      matchStatus &&\n      matchTracking &&\n      matchStatusFilter\n    );\n  });\n\n  const updateCell = async (rowIndex, field, newValue) => {\n    const order = data[rowIndex];\n    if (order && order.id) {\n      const orderRef = doc(firestore, \"orders\", order.id);\n      await updateDoc(orderRef, { [field]: newValue });\n    }\n  };\n\n  const handleAddRow = async () => {\n    const newOrder = { ...initialOrder, isNew: true };\n    const ordersCollection = collection(firestore, \"orders\");\n    await addDoc(ordersCollection, newOrder);\n  };\n\n  const handleDeleteSelected = async () => {\n    for (let rowIndex of selectedRows) {\n      const order = data[rowIndex];\n      if (order && order.id) {\n        const orderRef = doc(firestore, \"orders\", order.id);\n        try {\n          await deleteDoc(orderRef);\n        } catch (error) {\n          console.error(\"Ошибка при удалении заказа:\", error);\n        }\n      }\n    }\n    setSelectedRows([]);\n  };\n\n  const toggleRowSelection = (rowIndex) => {\n    if (selectedRows.includes(rowIndex)) {\n      setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n    } else {\n      setSelectedRows([...selectedRows, rowIndex]);\n    }\n  };\n\n  const handleFileChange = async (rowIndex, e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      const fileRef = ref(storage, `orders/${Date.now()}_${selectedFile.name}`);\n      try {\n        await uploadBytes(fileRef, selectedFile);\n        const downloadURL = await getDownloadURL(fileRef);\n        updateCell(rowIndex, \"project\", downloadURL);\n      } catch (error) {\n        console.error(\"Ошибка загрузки файла:\", error);\n      }\n    }\n  };\n\n  const handleImageClick = (imageUrl, e) => {\n    e.stopPropagation();\n    setEnlargedImage(imageUrl);\n  };\n\n  const handleCloseEnlargedImage = () => {\n    setEnlargedImage(null);\n  };\n\n  const resetFilters = () => {\n    setFilters({\n      searchText: \"\",\n      source: \"\",\n      recipientInfo: \"\",\n      status: \"\",\n      tracking: \"\",\n    });\n    setStatusFilter(\"\");\n  };\n\n  const openMessageModal = (rowIndex, currentMessages) => {\n    const updatedMessages =\n      currentMessages && currentMessages.length > 0\n        ? currentMessages.map((msg) => ({ ...msg, read: true }))\n        : [];\n    updateCell(rowIndex, \"message\", updatedMessages);\n    setMessageModalData({\n      rowIndex,\n      messages: updatedMessages,\n      newMessage: \"\",\n    });\n  };\n\n  function sendChatMessage() {\n    if (\n      !messageModalData.newMessage ||\n      messageModalData.newMessage.trim() === \"\"\n    )\n      return;\n    const newMsg = {\n      sender: user.email,\n      text: messageModalData.newMessage,\n      read: false,\n      avatar: user.photoURL || defaultAvatarUrl,\n    };\n    const updatedMessages = [...messageModalData.messages, newMsg];\n    updateCell(messageModalData.rowIndex, \"message\", updatedMessages);\n    setMessageModalData({\n      ...messageModalData,\n      messages: updatedMessages,\n      newMessage: \"\",\n    });\n  }\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(\"Ошибка при выходе:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Таблиця замовленнь</h1>\n      <div className=\"top-controls\">\n        <div className=\"left-controls\">\n          <button className=\"add-order-button\" onClick={handleAddRow}>\n            <img src={addIcon} alt=\"Додати\" className=\"add-icon\" />\n            <span>Додати замовлення</span>\n          </button>\n          <button className=\"print-button\" onClick={() => window.print()}>\n            <img src={printerIcon} alt=\"Друк\" />\n          </button>\n          {selectedRows.length > 0 && (\n            <button onClick={handleDeleteSelected}>\n              Видалити виділені ({selectedRows.length})\n            </button>\n          )}\n        </div>\n        <div className=\"right-controls\">\n          <button onClick={handleLogout}>Вийти</button>\n          <div className=\"right-avatar\">\n            <AvatarUploader />\n          </div>\n        </div>\n      </div>\n      <div className=\"status-search-row\">\n        <div className=\"status-buttons\">\n          {statusButtons.map((status) => (\n            <button\n              key={status}\n              className={`status-button ${\n                statusFilter === status ? \"active\" : \"\"\n              }`}\n              style={{\n                background:\n                  status === \"Все\"\n                    ? \"#fff\"\n                    : rowBackgroundColors[status] || \"#fff\",\n              }}\n              onClick={() => {\n                if (status === \"Все\") {\n                  setStatusFilter(\"\");\n                } else {\n                  setStatusFilter(status);\n                }\n              }}\n            >\n              {status}\n            </button>\n          ))}\n        </div>\n        <div className=\"search-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Пошук...\"\n            value={filters.searchText}\n            onChange={(e) =>\n              setFilters({ ...filters, searchText: e.target.value })\n            }\n            className=\"search-input\"\n          />\n          <div className=\"search-icon\">\n            <img src={searchIcon} alt=\"Пошук\" />\n          </div>\n        </div>\n      </div>\n      <div className=\"table-wrapper\">\n        <table>\n          <thead>\n            <tr>\n              <th\n                className=\"col-order no-print\"\n                onClick={() => toggleRowSelection(0)}\n              >\n                Вибір\n              </th>\n              {tableColumns.map((col, index) => (\n                <th\n                  key={index}\n                  className={col.className || \"\"}\n                  style={col.style ? col.style : {}}\n                >\n                  {col.key === \"dates\" ? \"Дата від/до\" : col.label}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {filteredData.map((order, rowIndex) => {\n              const bgColor = order.status\n                ? rowBackgroundColors[order.status] || \"transparent\"\n                : \"transparent\";\n              const inputBorderColor = darkenHex(bgColor, 10);\n              const inputBgColor = darkenHex(bgColor, 3);\n              const cellBorderColor = darkenHex(bgColor, 15);\n              const isSelected = selectedRows.includes(rowIndex);\n              return (\n                <tr\n                  key={rowIndex}\n                  className={`custom-bg ${isSelected ? \"selected\" : \"\"}`}\n                  style={{\n                    ...(order.isNew && { animation: \"fadeInUp 0.2s ease-out\" }),\n                    \"--row-bg\": bgColor,\n                    \"--input-border\": inputBorderColor,\n                    \"--input-bg\": inputBgColor,\n                    \"--cell-border\": cellBorderColor,\n                    outline: isSelected ? \"1px solid #000\" : \"none\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <td\n                    onClick={() => toggleRowSelection(rowIndex)}\n                    className=\"no-bg no-print\"\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={isSelected}\n                      onClick={(e) => e.stopPropagation()}\n                      onChange={() => toggleRowSelection(rowIndex)}\n                    />\n                  </td>\n                  {tableColumns.map((col) => {\n                    if (col.key === \"orderNo\") {\n                      return (\n                        <td key={col.key}>{filteredData.length - rowIndex}</td>\n                      );\n                    } else if (col.key === \"dates\") {\n                      return (\n                        <td key={col.key}>\n                          <DateInput\n                            value={order.orderDate}\n                            onChange={(date) =>\n                              updateCell(rowIndex, \"orderDate\", date)\n                            }\n                          />\n                          <br />\n                          <DateInput\n                            value={order.shippingDate}\n                            onChange={(date) =>\n                              updateCell(rowIndex, \"shippingDate\", date)\n                            }\n                          />\n                        </td>\n                      );\n                    } else if (col.key === \"message\") {\n                      return (\n                        <td key={col.key}>\n                          <button\n                            className=\"message-button\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              openMessageModal(rowIndex, order.message);\n                            }}\n                          >\n                            <img src={commentIcon} alt=\"Повідомлення\" />\n                            {order.message &&\n                              (() => {\n                                const currentUserEmail = user?.email;\n                                const unreadCount = order.message.filter(\n                                  (msg) =>\n                                    msg.sender !== currentUserEmail && !msg.read\n                                ).length;\n                                const indicatorClass =\n                                  unreadCount > 0\n                                    ? \"red-indicator\"\n                                    : \"green-indicator\";\n                                return (\n                                  <span className={indicatorClass}>\n                                    {order.message.length}\n                                  </span>\n                                );\n                              })()}\n                          </button>\n                        </td>\n                      );\n                    } else if (col.key === \"project\") {\n                      return (\n                        <td key={col.key}>\n                          {order.project ? (\n                            isSelected ? (\n                              <label className=\"file-button\">\n                                Change photo\n                                <input\n                                  type=\"file\"\n                                  onChange={(e) =>\n                                    handleFileChange(rowIndex, e)\n                                  }\n                                  style={{ display: \"none\" }}\n                                />\n                              </label>\n                            ) : (\n                              <img\n                                src={order.project}\n                                alt=\"Макет\"\n                                style={{\n                                  width: \"80px\",\n                                  height: \"80px\",\n                                  objectFit: \"cover\",\n                                  cursor: \"pointer\",\n                                }}\n                                onClick={(e) =>\n                                  handleImageClick(order.project, e)\n                                }\n                              />\n                            )\n                          ) : (\n                            <label className=\"file-button\">\n                              🖼\n                              <input\n                                type=\"file\"\n                                onChange={(e) => handleFileChange(rowIndex, e)}\n                                style={{ display: \"none\" }}\n                              />\n                            </label>\n                          )}\n                        </td>\n                      );\n                    } else if (col.editable) {\n                      return (\n                        <td\n                          key={col.key}\n                          className={col.className || \"\"}\n                          style={col.style ? col.style : {}}\n                        >\n                          <AlwaysEditableCell\n                            value={order[col.key] || \"\"}\n                            onChange={(newVal) =>\n                              updateCell(rowIndex, col.key, newVal)\n                            }\n                            type={\n                              col.type === \"date\" ? \"date\" : col.type || \"text\"\n                            }\n                            options={col.options}\n                            customStyle={\n                              col.type === \"date\"\n                                ? {}\n                                : { backgroundColor: \"var(--input-bg)\" }\n                            }\n                          />\n                        </td>\n                      );\n                    } else {\n                      return <td key={col.key}>{order[col.key] || \"\"}</td>;\n                    }\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      {enlargedImage && (\n        <div className=\"image-modal\">\n          <div className=\"image-modal-content\">\n            <span className=\"close\" onClick={handleCloseEnlargedImage}>\n              &times;\n            </span>\n            <img src={enlargedImage} alt=\"Увеличенное фото\" />\n          </div>\n        </div>\n      )}\n      {messageModalData && (\n        <div\n          className=\"modal-overlay\"\n          onClick={() => setMessageModalData(null)}\n        >\n          <div className=\"message-modal\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-bg\">\n              <div className=\"modal-inner\">\n                <div className=\"message-modal-header\">\n                  <div>\n                    <span className=\"modal-title\">Чат</span>\n                    {data[messageModalData.rowIndex] && (\n                      <div className=\"modal-subtitle\">\n                        Товар: {data[messageModalData.rowIndex].item} /\n                        Персоналізація:{\" \"}\n                        {data[messageModalData.rowIndex].description} (№{\" \"}\n                        {filteredData.length - messageModalData.rowIndex})\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"message-modal-body\">\n                  {messageModalData.messages.length === 0 ? (\n                    <div className=\"no-messages\">Немає повідомлень</div>\n                  ) : (\n                    // Рендер сообщений: для всех сообщений выводим аватар только если отправитель – не текущий пользователь\n                    messageModalData.messages.map((msg, idx) => {\n                      const isCurrent = msg.sender === user.email;\n                      return (\n                        <div\n                          key={idx}\n                          className={`chat-message-container ${\n                            isCurrent ? \"current\" : \"other\"\n                          }`}\n                          style={isCurrent ? { marginLeft: \"auto\" } : {}}\n                        >\n                          {!isCurrent && (\n                            <div className=\"chat-avatar\">\n                              <img\n                                src={msg.avatar || defaultAvatarUrl}\n                                alt=\"avatar\"\n                              />\n                            </div>\n                          )}\n                          <div className=\"chat-message-bubble\">{msg.text}</div>\n                        </div>\n                      );\n                    })\n                  )}\n                  <div ref={messageEndRef} />\n                </div>\n                <div className=\"message-modal-footer\">\n                  <div className=\"textarea-container\">\n                    <textarea\n                      placeholder=\"Напишіть повідомлення...\"\n                      value={messageModalData.newMessage || \"\"}\n                      onChange={(e) =>\n                        setMessageModalData({\n                          ...messageModalData,\n                          newMessage: e.target.value,\n                        })\n                      }\n                      onInput={autoResize}\n                      style={{ minHeight: \"40px\" }}\n                    />\n                    <button\n                      onClick={sendChatMessage}\n                      className=\"send-button\"\n                    ></button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <span className=\"close\" onClick={() => setMessageModalData(null)}>\n              &times;\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const { user } = useContext(AuthContext);\n  return user ? <AppContent /> : <Login onLogin={() => {}} />;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}